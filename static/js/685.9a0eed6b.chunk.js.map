{"version":3,"file":"static/js/685.9a0eed6b.chunk.js","mappings":"kQAEaA,EAAe,mCAAG,WAAMC,GAAN,yFACNC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,8CADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sD,kBCDfC,EAAeC,EAAAA,GAAAA,IAAH,2E,SCEZC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAElBC,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,YAAaC,EAAmCH,EAAnCG,OAAQC,EAA2BJ,EAA3BI,aAAcC,EAAaL,EAAbK,SAC5CC,EAAYC,KAAKC,MAAqB,GAAfJ,GAE7B,OACE,UAACP,EAAD,YACG,gBAAKY,IAAG,UANG,mCAMH,OAAeP,GAAeQ,IAAKT,EAAOU,MAAM,SACzD,4BACE,wBAAKV,KACL,wCAAgBK,MAChB,sCACA,uBAAID,KACJ,oCACA,uBAAIF,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,aAIhD,ECnBYC,EAAclB,EAAAA,GAAAA,IAAH,wDC8CxB,EAnCqB,WAAO,IAAD,IACjBJ,GAAYuB,EAAAA,EAAAA,MAAZvB,QACR,GAA0BwB,EAAAA,EAAAA,UAAS,MAAnC,eAAOlB,EAAP,KAAcmB,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,6GAEF9B,EAAgBC,GAFd,OAEfE,EAFe,OAGrBuB,EAASvB,GAHY,gDAKrB4B,QAAQC,IAAI,KAAMC,SALG,yDAAH,qDAQtBH,EAAiB7B,EAClB,GAAE,CAACA,KAGF,iCACE,SAAC,KAAD,CAAMiC,GAAE,oBAAEP,EAASQ,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,qBACC7B,IAAS,SAACD,EAAD,CAAWC,MAAOA,KAC5B,oDACA,UAACgB,EAAD,YACE,SAAC,KAAD,CAASY,MAAOR,EAASQ,MAAOD,GAAG,OAAnC,mBAGA,SAAC,KAAD,CAASC,MAAOR,EAASQ,MAAOD,GAAG,UAAnC,sBAGA,SAAC,KAAD,SAIP,C","sources":["services/getMovieDetails.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=12ac25c7c9088e7eb96a592d77352c75`\n  );\n\n  return data;\n};\n","import styled from 'styled-components';\nexport const MovieWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  margin: 15px 0;\n`;\n","import React from 'react';\nimport { MovieWrapper } from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const { title, poster_path, genres, vote_average, overview } = movie;\n  const userScore = Math.round(vote_average * 10);\n\n  return (\n    <MovieWrapper>\n      {<img src={`${IMG_URL}${poster_path}`} alt={title} width=\"400\" />}\n      <div>\n        <h1>{title}</h1>\n        <p>User score: {userScore}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.map(genre => genre.name).join(', ')}</p>\n      </div>\n    </MovieWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledLinks = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n","import { useState, useEffect } from 'react';\nimport {\n  NavLink,\n  Link,\n  Outlet,\n  useParams,\n  useLocation,\n} from 'react-router-dom';\nimport { getMovieDetails } from '../../services/getMovieDetails';\nimport { MovieCard } from '../../components/MovieCard/MovieCard';\n\nimport { StyledLinks } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const showMovieDetails = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    showMovieDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>Go back</Link>\n      {movie && <MovieCard movie={movie} />}\n      <h2>Additional information</h2>\n      <StyledLinks>\n        <NavLink state={location.state} to=\"cast\">\n          Cast\n        </NavLink>\n        <NavLink state={location.state} to=\"reviews\">\n          Reviews\n        </NavLink>\n        <Outlet />\n      </StyledLinks>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getMovieDetails","movieId","axios","data","MovieWrapper","styled","MovieCard","movie","title","poster_path","genres","vote_average","overview","userScore","Math","round","src","alt","width","map","genre","name","join","StyledLinks","useParams","useState","setMovie","location","useLocation","useEffect","showMovieDetails","console","log","message","to","state","from"],"sourceRoot":""}